{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","Color","gutterBottom","variant","start","end","value","duration","separator","color","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de24f202.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__7ai3J\",\"card\":\"Cards_card__1JCVf\",\"infected\":\"Cards_infected__3p3_r\",\"recovered\":\"Cards_recovered__1Foj2\",\"deaths\":\"Cards_deaths__2VPds\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from \"classnames\";\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n               <CardContent>\r\n                   <Typography Color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                   <Typography variant=\"h5\">\r\n                       <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                   </Typography>\r\n                   <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                   <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n               </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n               <CardContent>\r\n                   <Typography Color=\"textSecondary\" gutterBottom>Recoveries</Typography>\r\n                   <Typography variant=\"h5\">\r\n                       <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                   </Typography>\r\n                   <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                   <Typography variant=\"body2\">Number of active recoveries from COVID-19</Typography>\r\n               </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n               <CardContent>\r\n                   <Typography Color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                   <Typography variant=\"h5\">\r\n                       <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                   </Typography>\r\n                   <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                   <Typography variant=\"body2\">Number of active deaths caused by COVID-19</Typography>\r\n               </CardContent>\r\n\r\n            </Grid>\r\n\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n\r\n    try {\r\n\r\n       const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n\r\n       return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    }catch (error){\r\n\r\n      console.log(error);\r\n      \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try {\r\n        const { data} =  await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=> ({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error){\r\n        console.log(error);\r\n        \r\n\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name);   \r\n        \r\n\r\n    }catch (error){\r\n        console.log(error);\r\n        \r\n    }\r\n};\r\n","import React , {useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport {Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n        \r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n\r\n\r\n    const lineChart = (\r\n\r\n        dailyData.length \r\n        ? (\r\n        <Line\r\n     \r\n          data={{\r\n              labels:dailyData.map(({date}) => date),\r\n              datasets:[\r\n                  {data: dailyData.map(({confirmed}) => confirmed),\r\n                  label: 'Infected',\r\n                  borderColor: '#3333ff',\r\n                  fill: true,\r\n                  } ,  {\r\n                  data: dailyData.map(({deaths}) => deaths),\r\n                  label: 'Deaths',\r\n                  borderColor: 'red',\r\n                  backgroundColor:'rgba(225,0,0,0.5)',\r\n                  fill: true,\r\n                  }],\r\n          }}\r\n\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n              \r\n              data ={{\r\n                  labels: ['Infected', 'Recovered', 'Deaths'],\r\n                  datasets:[{\r\n                      label: 'People',\r\n                      backgroundColor:[\r\n                    \r\n                    'rgba(0, 0, 255, 0.5)',\r\n                    'rgba(0, 255, 0, 0.5)',\r\n                    'rgba(255, 0, 0, 0.5)',\r\n                      ],\r\n                      data:[confirmed.value, recovered.value, deaths.value]\r\n                  }]\r\n\r\n              }}\r\n\r\n              options={{\r\n                  legend: { display:false},\r\n                  title : {display:true, text:`Current state in ${country}`},\r\n              }}\r\n            \r\n\r\n\r\n             />\r\n        ) : null\r\n    );\r\n\r\n\r\n    return (\r\n       <div className={styles.container}>\r\n           {country ? barChart : lineChart}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from \"react\";\r\nimport {NativeSelect, FormControl } from '@material-ui/core';\r\n\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n    const fetchAPI = async () => {\r\n\r\n        setFetchedCountries(await fetchCountries());\r\n\r\n    }\r\n\r\n    fetchAPI();\r\n\r\n  },[]);\r\n\r\n\r\n    return (\r\n       <FormControl className={styles.formControl}>\r\n       <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n       <option value= \"\">Global</option>\r\n       {fetchedCountries.map((country) => <option value={country}>{country}</option>)}\r\n       </NativeSelect>\r\n\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\n\r\nimport {Cards, Chart, CountryPicker} from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData} from \"./api\";\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n \r\n    state = {\r\n      data: {},\r\n      country:'',\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data:fetchedData});\r\n        \r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData, country : country});\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const { data , country} = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />,document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3lnxg\",\"image\":\"App_image__3Jd8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1bjIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1Wtoj\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}